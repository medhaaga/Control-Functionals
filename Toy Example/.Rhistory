lines(time_rep, var_CF, type = "b", col  =3, lty=3, pch =17, lwd=2)
lines(time_rep, var_sCF, type = "b", col = 4, lty=4, pch = 16, lwd=2)
legend("topright", legend = c("AM", "ZV-CV", "CF", "simplified CF"), col = 1:4, lty = 1:4, lwd = c(1,2,2,2), pch = 1:4, cex = .6)
pdf(file = "MSE.pdf", width = 5, height = 5)
par(mfrow = c(1,1))
plot(time_rep, var_AM, type = "b", ylim = range(var_AM, var_ZVCV, var_CF, var_sCF), pch =19, xlab = "Number of samples n", ylab = "MSE x n")
lines(time_rep, var_ZVCV, type = "b", col = 2, lty=2, pch = 18, lwd=2)
lines(time_rep, var_CF, type = "b", col  =3, lty=3, pch =17, lwd=2)
lines(time_rep, var_sCF, type = "b", col = 4, lty=4, pch = 16, lwd=2)
legend("topright", legend = c("AM", "ZV-CV", "CF", "simplified CF"), col = 1:4, lty = 1:4, lwd = c(1,2,2,2), pch = 1:4, cex = .5)
dev.off()
pdf(file = "MSE.pdf", width = 5, height = 5)
par(mfrow = c(1,1))
plot(time_rep, var_AM, type = "b", ylim = range(var_AM, var_ZVCV, var_CF, var_sCF), pch =19, xlab = "Number of samples n", ylab = "MSE x n")
lines(time_rep, var_ZVCV, type = "b", col = 2, lty=2, pch = 18, lwd=2)
lines(time_rep, var_CF, type = "b", col  =3, lty=3, pch =17, lwd=2)
lines(time_rep, var_sCF, type = "b", col = 4, lty=4, pch = 16, lwd=2)
legend("topright", legend = c("AM", "ZV-CV", "CF", "simplified CF"), col = 1:4, lty = 1:4, lwd = c(1,2,2,2), pch = 1:4, cex = .6)
dev.off()
pdf(file = "MSE.pdf", width = 5, height = 5)
par(mfrow = c(1,1))
plot(time_rep, var_AM, type = "b", ylim = range(var_AM, var_ZVCV, var_CF, var_sCF), pch =19, xlab = "Number of samples n", ylab = "MSE x n")
lines(time_rep, var_ZVCV, type = "b", col = 2, lty=2, pch = 18, lwd=2)
lines(time_rep, var_CF, type = "b", col  =3, lty=3, pch =17, lwd=2)
lines(time_rep, var_sCF, type = "b", col = 4, lty=4, pch = 16, lwd=2)
legend("topright", legend = c("AM", "ZV-CV", "CF", "simplified CF"), col = 1:4, lty = 1:4, lwd = c(1,2,2,2), pch = 1:4, cex = .7)
dev.off()
seq(4,1)
seq(19,16)
pdf(file = "MSE.pdf", width = 5, height = 5)
par(mfrow = c(1,1))
plot(time_rep, var_AM, type = "b", ylim = range(var_AM, var_ZVCV, var_CF, var_sCF), pch =19, xlab = "Number of samples n", ylab = "MSE x n")
lines(time_rep, var_ZVCV, type = "b", col = 2, lty=2, pch = 18, lwd=2)
lines(time_rep, var_CF, type = "b", col  =3, lty=3, pch =17, lwd=2)
lines(time_rep, var_sCF, type = "b", col = 4, lty=4, pch = 16, lwd=2)
legend("topright", legend = c("AM", "ZV-CV", "CF", "simplified CF"), col = 1:4, lty = 1:4, lwd = c(1,2,2,2), pch = seq(19,16), cex = .7)
dev.off()
library(ZVCV)
set.seed(10)
log.density <- function(x, p, mu1, mu2, sd1, sd2){
return(log(p*dnorm(x, mean = mu1, sd = sd1) + (1-p)*dnorm(x, mean = mu2, sd= sd2)))
}
mh.mcmc <- function(start, p, mu1, mu2, sd1, sd2, N, h){
X <- rep(0, N)
X[1] <- start
for (i in 2:N){
prop <- rnorm(1, mean = X[i-1], sd = 2)
ratio <- log.density(prop, p, mu1, mu2, sd1, sd2) - log.density(X[i-1], p, mu1, mu2, sd1, sd2)
if(runif(1) < exp(ratio))
X[i] <- prop else
X[i] <- X[i-1]
}
return (X)
}
u <- function(x, p, mu1, mu2, sd1, sd2){
dens <- exp(log.density(x, p, mu1, mu2, sd1, sd2))
grad <- -((p*(x - mu1)*(1/sd1^2)*dnorm(x, mu1, sd1)) + ((1-p)*(x - mu2)*(1/sd2^2)*dnorm(x, mu2, sd2)))
return(grad/dens)
}
rep <- 10
p <- .7
mu1 <- -2
mu2 <- 2
sd1 <- 1
sd2 <- 0.5
mu_AM <- rep(0, rep)
mu_CF <- rep(0, rep)
mu_sCF <- rep(0, rep)
mu_ZVCV <- rep(0, rep)
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "gaussian", sigma = c(1))$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "gaussian", sigma = c(1), est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
pdf(file = "gaussian_mixture.pdf", height = 5, width = 10)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
dev.off()
pdf(file = "gaussian_mixture.pdf", height = 5, width = 5)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
dev.off()
library(ZVCV)
set.seed(10)
log.density <- function(x, p, mu1, mu2, sd1, sd2){
return(log(p*dnorm(x, mean = mu1, sd = sd1) + (1-p)*dnorm(x, mean = mu2, sd= sd2)))
}
mh.mcmc <- function(start, p, mu1, mu2, sd1, sd2, N, h){
X <- rep(0, N)
X[1] <- start
for (i in 2:N){
prop <- rnorm(1, mean = X[i-1], sd = 2)
ratio <- log.density(prop, p, mu1, mu2, sd1, sd2) - log.density(X[i-1], p, mu1, mu2, sd1, sd2)
if(runif(1) < exp(ratio))
X[i] <- prop else
X[i] <- X[i-1]
}
return (X)
}
u <- function(x, p, mu1, mu2, sd1, sd2){
dens <- exp(log.density(x, p, mu1, mu2, sd1, sd2))
grad <- -((p*(x - mu1)*(1/sd1^2)*dnorm(x, mu1, sd1)) + ((1-p)*(x - mu2)*(1/sd2^2)*dnorm(x, mu2, sd2)))
return(grad/dens)
}
rep <- 10
p <- .7
mu1 <- -2
mu2 <- 2
sd1 <- 1
sd2 <- 0.5
mu_AM <- rep(0, rep)
mu_CF <- rep(0, rep)
mu_sCF <- rep(0, rep)
mu_ZVCV <- rep(0, rep)
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(.1,1))$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(.1,1), est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
p
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
library(ZVCV)
set.seed(10)
log.density <- function(x, p, mu1, mu2, sd1, sd2){
return(log(p*dnorm(x, mean = mu1, sd = sd1) + (1-p)*dnorm(x, mean = mu2, sd= sd2)))
}
mh.mcmc <- function(start, p, mu1, mu2, sd1, sd2, N, h){
X <- rep(0, N)
X[1] <- start
for (i in 2:N){
prop <- rnorm(1, mean = X[i-1], sd = 2)
ratio <- log.density(prop, p, mu1, mu2, sd1, sd2) - log.density(X[i-1], p, mu1, mu2, sd1, sd2)
if(runif(1) < exp(ratio))
X[i] <- prop else
X[i] <- X[i-1]
}
return (X)
}
u <- function(x, p, mu1, mu2, sd1, sd2){
dens <- exp(log.density(x, p, mu1, mu2, sd1, sd2))
grad <- -((p*(x - mu1)*(1/sd1^2)*dnorm(x, mu1, sd1)) + ((1-p)*(x - mu2)*(1/sd2^2)*dnorm(x, mu2, sd2)))
return(grad/dens)
}
rep <- 10
p <- .7
mu1 <- -2
mu2 <- 2
sd1 <- 1
sd2 <- 0.5
mu_AM <- rep(0, rep)
mu_CF <- rep(0, rep)
mu_sCF <- rep(0, rep)
mu_ZVCV <- rep(0, rep)
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(.1,2))$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(.1,2), est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
mu_AM <- rep(0, rep)
mu_CF <- rep(0, rep)
mu_sCF <- rep(0, rep)
mu_ZVCV <- rep(0, rep)
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(.1,6))$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(.1,6), est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
mu_AM <- rep(0, rep)
mu_CF <- rep(0, rep)
mu_sCF <- rep(0, rep)
mu_ZVCV <- rep(0, rep)
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(1,1))$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(1,1), est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(.1,1))$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(.1,1), est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(.1,1))$expectation
est.ind <- sample.int(N, N/3)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(.1,1), est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(1,1))$expectation
est.ind <- sample.int(N, N/3)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(1,1), est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(1,1))$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(1,1), est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
rep <- 10
p <- .7
mu1 <- -2
mu2 <- 2
sd1 <- 1
sd2 <- 1
mu_AM <- rep(0, rep)
mu_CF <- rep(0, rep)
mu_sCF <- rep(0, rep)
mu_ZVCV <- rep(0, rep)
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(1,1))$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(1,1), est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
p <- .7
mu1 <- -2
mu2 <- 2
sd1 <- 1
sd2 <- 2
mu_AM <- rep(0, rep)
mu_CF <- rep(0, rep)
mu_sCF <- rep(0, rep)
mu_ZVCV <- rep(0, rep)
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(1,1))$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(1,1), est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(.1,1))$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", sigma = c(.1,1), est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
?CF
mu_AM <- rep(0, rep)
mu_CF <- rep(0, rep)
mu_sCF <- rep(0, rep)
mu_ZVCV <- rep(0, rep)
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", diagnostics = TRUE)$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "product", diagnostics = TRUE, est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "productsim", sigma = c(.1,1), diagnostics = TRUE)$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "productsim", sigma = c(.1,1), diagnostics = TRUE, est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "prodsim", sigma = c(.1,1), diagnostics = TRUE)$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "prodsim", sigma = c(.1,1), diagnostics = TRUE, est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "prodsim", sigma = c(1,1), diagnostics = TRUE)$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "prodsim", sigma = c(1,1), diagnostics = TRUE, est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
p <- .7
mu1 <- -2
mu2 <- 2
sd1 <- 1
sd2 <- 0.5
mu_AM <- rep(0, rep)
mu_CF <- rep(0, rep)
mu_sCF <- rep(0, rep)
mu_ZVCV <- rep(0, rep)
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "prodsim", sigma = c(1,1), diagnostics = TRUE)$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "prodsim", sigma = c(1,1), diagnostics = TRUE, est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
p <- .7
mu1 <- -2
mu2 <- 2
sd1 <- 1
sd2 <- 1
mu_AM <- rep(0, rep)
mu_CF <- rep(0, rep)
mu_sCF <- rep(0, rep)
mu_ZVCV <- rep(0, rep)
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "prodsim", sigma = c(1,1), diagnostics = TRUE)$expectation
est.ind <- sample.int(N, N/2)
mu_CF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "prodsim", sigma = c(1,1), diagnostics = TRUE, est_inds = est_ind)$expectation
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "CF" = mu_CF, "simplified CF" = mu_sCF))
CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "prodsim", sigma = c(1,1), diagnostics = TRUE)
mu_AM <- rep(0, rep)
mu_sCF <- rep(0, rep)
mu_ZVCV <- rep(0, rep)
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, 1000, 1))
x <- as.matrix(x[1000-N:1000,])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "prodsim", sigma = c(1,1))$expectation
est.ind <- sample.int(N, N/2)
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "simplified CF" = mu_sCF))
pdf(file = "gaussian_mixture.pdf", height = 5, width = 5)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "simplified CF" = mu_sCF))
dev.off()
500:500+N
500:500+N
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, N+500, 1))
x <- as.matrix(x[500:500+N,])
x
x <- as.matrix(x[500:(500+N),])
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, N+500, 1))
x <- as.matrix(x[500:(500+N),])
x
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, N+500, 1))
x <- as.matrix(x[500:(500+N),])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "prodsim", sigma = c(1,1))$expectation
est.ind <- sample.int(N, N/2)
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "simplified CF" = mu_sCF))
N <- 200
for (i in 1:rep){
x <- as.matrix(mh.mcmc(start = -3, p, mu1, mu2, sd1, sd2, N+500, 1))
x <- as.matrix(x[500:(500+N),])
grad <- as.matrix(apply(x, 1, u, p, mu1, mu2, sd1, sd2))
f <- x^3
mu_AM[i] <- mean(f)
mu_sCF[i] <- CF(integrands = f, samples = x, derivatives = grad,steinOrder = 1, kernel_function = "prodsim", sigma = c(.1,1))$expectation
est.ind <- sample.int(N, N/2)
mu_ZVCV[i] <- zvcv(integrand = f, samples = x, derivatives = grad)$expectation
}
par(mfrow = c(1,1))
plot.ts(x)
boxplot(data.frame("AM" = mu_AM, "ZV-CV" = mu_ZVCV, "simplified CF" = mu_sCF))
plot.ts(x)
